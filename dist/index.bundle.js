(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([e.id,"html,\nbody {\n    width: 100%;\n    height: 100%;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n\ndiv[class*='todo'] {\n    border: 1px solid black;\n    margin-left: 20px;\n    margin-right: 25px;\n    display: flex;\n    justify-content: space-between;\n}\ndiv[class*='project'] {\n    border: 1px solid black;\n    margin-left: 5px;\n    margin-right: 10px;\n}\ndiv[class*='project']:active {\n    border: 2px solid yellow;\n}\n\n.folderForm {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:space-between;\n    gap: 5px;\n\n}\n\n#title {\n    margin: 5px;\n}\n#description {\n    margin: 5px;\n    width: 400px;\n}\n#dueDate {\n    margin: 5px;\n}\n#priority {\n    margin: 5px;\n}\n#addTodo {\n    margin: 5px;\n}\n.descContainer {\n    border: 1px solid black;\n    border-top: none;\n}\n\n.restContainer {\n    border: 1px solid black;\n    border-top: none;\n}\n.taskForm {\n    display: flex;\n    justify-content: space-between;\n    gap: 5px;\n    margin: 0px 10px;\n}\n\n.left {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.right {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,WAAW;IACX,YAAY;AAChB;AACA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,SAAS;AACb;;;AAGA;IACI,kBAAkB;IAClB,WAAW;IACX,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,WAAW;IACX,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;AACA;IACI,cAAc;IACd,WAAW;IACX,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,uBAAuB;IACvB,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,QAAQ;;AAEZ;;AAEA;IACI,WAAW;AACf;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;AACf;AACA;IACI,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,uBAAuB;IACvB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB",sourcesContent:["html,\nbody {\n    width: 100%;\n    height: 100%;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n\ndiv[class*='todo'] {\n    border: 1px solid black;\n    margin-left: 20px;\n    margin-right: 25px;\n    display: flex;\n    justify-content: space-between;\n}\ndiv[class*='project'] {\n    border: 1px solid black;\n    margin-left: 5px;\n    margin-right: 10px;\n}\ndiv[class*='project']:active {\n    border: 2px solid yellow;\n}\n\n.folderForm {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:space-between;\n    gap: 5px;\n\n}\n\n#title {\n    margin: 5px;\n}\n#description {\n    margin: 5px;\n    width: 400px;\n}\n#dueDate {\n    margin: 5px;\n}\n#priority {\n    margin: 5px;\n}\n#addTodo {\n    margin: 5px;\n}\n.descContainer {\n    border: 1px solid black;\n    border-top: none;\n}\n\n.restContainer {\n    border: 1px solid black;\n    border-top: none;\n}\n.taskForm {\n    display: flex;\n    justify-content: space-between;\n    gap: 5px;\n    margin: 0px 10px;\n}\n\n.left {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.right {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n\n"],sourceRoot:""}]);const d=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&a[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],d=0;d<e.length;d++){var c=e[d],l=r.base?c[0]+r.base:c[0],s=o[l]||0,p="".concat(l," ").concat(s);o[l]=s+1;var A=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var m=i(u,r);r.byIndex=d,n.splice(d,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var d=t(o[a]);n[d].references--}for(var c=r(e,i),l=0;l<o.length;l++){var s=t(o[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},865:(e,n,t)=>{t.d(n,{Z:()=>r});const r=function(e,n,t,r){this.id=e,this.title=n,this.arr=t,this.domElement=r}},304:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(610);function i(){const e=document.createElement("form");return e.classList.add("folderForm"),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","title"),e.innerHTML="Title";const n=document.createElement("input");return n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("id","title"),e.appendChild(n),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","create");const n=document.createElement("input");return n.setAttribute("type","button"),n.setAttribute("value","Create New"),n.setAttribute("name","create"),n.setAttribute("id","create"),n.addEventListener("click",(()=>{(0,r.R)()})),e.appendChild(n),e}()),e}},610:(e,n,t)=>{t.d(n,{R:()=>a});var r=t(865),i=t(787);let o=[],a=function(e){const n=document.getElementById("title").value,t=document.createElement("div");t.classList.add("project"+o.length);const a=document.createElement("h1");a.innerHTML=n,t.appendChild(a),function(){const e=document.getElementById("title").value,n=o.length,t=document.getElementsByClassName("project"+o.length);o.push(new r.Z(n,e,[],t))}(),t.addEventListener("click",(function(){const e=document.createElement("label");e.setAttribute("for","addTodo");const n=document.createElement("input");n.setAttribute("type","button"),n.setAttribute("value","Add"),n.setAttribute("name","addTodo"),n.setAttribute("id","addTodo");const r=document.getElementsByClassName("form2")[0];for(;r.children[3];)r.removeChild(r.lastChild);r.appendChild(e),n.addEventListener("click",(function(){const e=document.getElementById("description").value,n=document.getElementById("dueDate").value,t=document.getElementById("priority").value,r=document.createElement("div");r.classList.add("todo"+i.jK.length),r.appendChild((0,i.FP)());const o=document.createElement("p");o.innerHTML=e,r.appendChild(o);const c=document.createElement("p");c.innerHTML=n,r.appendChild(c);const l=document.createElement("p");l.innerHTML=t,r.appendChild(l);const s=document.createElement("button");s.innerHTML="Delete",s.addEventListener("click",(function(){return a.removeChild(r)})),s.addEventListener("click",(function(){return i.jK.splice(i.jK.length-1,1)})),r.appendChild(s),a.appendChild(r),d.push(r)})),e.appendChild(n);const a=document.getElementsByClassName("taskcontainer")[0];for(;a.children[1];)a.removeChild(a.lastChild);let d=o[t.className.charAt(7)].arr;for(let e of d)a.appendChild(e)}));const d=document.createElement("button");d.innerHTML="Delete",d.addEventListener("click",(function(){return c.removeChild(t)})),d.addEventListener("click",(function(){return o.splice(o.length-1,1)})),t.appendChild(d);const c=document.getElementsByClassName("sidebar")[0];c.appendChild(t)}},507:(e,n,t)=>{t.d(n,{Z:()=>r});const r=function(e,n,t,r,i){this.id=e,this.description=n,this.dueDate=t,this.priority=r,this.connector=i}},787:(e,n,t)=>{t.d(n,{FP:()=>d,is:()=>o,jK:()=>i});var r=t(507);const i=[];let o=function(e){const n=document.getElementById("description").value,t=document.getElementById("dueDate").value,o=document.getElementById("priority").value;!function(){const e=document.getElementById("description").value,n=document.getElementById("dueDate").value,t=document.getElementById("priority").value,o=i.length;i.push(new r.Z(o,e,n,t,a)),console.log(i),console.log(o)}();const c=document.createElement("div");c.classList.add("left");const l=document.createElement("div");l.classList.add("right");const s=document.createElement("div");s.classList.add("todo"+i.length);const p=document.createElement("p");p.innerHTML=n;const A=document.createElement("p");A.innerHTML=t;const u=document.createElement("p");u.innerHTML=o;const m=document.createElement("button");m.innerHTML="Delete",m.addEventListener("click",(function(){return C.removeChild(s)})),m.addEventListener("click",(function(){return i.splice(i.length-1,1)})),c.appendChild(d()),c.appendChild(p),l.appendChild(A),l.appendChild(u),l.appendChild(m),s.appendChild(c),s.appendChild(l);const C=document.getElementsByClassName("taskcontainer")[0];C.appendChild(s)};function a(){return document.getElementsByClassName("todo"+i.length)}function d(){const e=document.createElement("label");e.setAttribute("for","checklist");const n=document.createElement("input");return n.setAttribute("type","checkbox"),n.setAttribute("name","checklist"),n.setAttribute("id","checklist"),e.appendChild(n),e}},322:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(787);function i(){const e=document.createElement("form");e.classList.add("taskForm");const n=document.createElement("div");n.classList.add("descContainer");const t=document.createElement("div");return t.classList.add("restContainer"),n.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","description"),e.innerHTML="Description";const n=document.createElement("input");return n.setAttribute("type","text"),n.setAttribute("name","description"),n.setAttribute("id","description"),e.appendChild(n),e}()),t.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","dueDate"),e.innerHTML="Due Date";const n=document.createElement("input");return n.setAttribute("type","date"),n.setAttribute("name","dueDate"),n.setAttribute("id","dueDate"),e.appendChild(n),e}()),t.appendChild(function(){const e=document.createElement("select");e.setAttribute("name","priority"),e.setAttribute("id","priority");const n=document.createElement("option");n.setAttribute("value","Urgent"),n.innerHTML="Urgent";const t=document.createElement("option");t.setAttribute("value","Normal"),t.innerHTML="Normal";const r=document.createElement("option");return r.setAttribute("value","Low"),r.innerHTML="Low",e.appendChild(n),e.appendChild(t),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","addTodo");const n=document.createElement("input");return n.setAttribute("type","button"),n.setAttribute("value","Add"),n.setAttribute("name","addTodo"),n.setAttribute("id","addTodo"),n.addEventListener("click",(()=>(0,r.is)())),e.appendChild(n),e}()),e.appendChild(n),e.appendChild(t),e}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),i=t.n(r),o=t(569),a=t.n(o),d=t(565),c=t.n(d),l=t(216),s=t.n(l),p=t(589),A=t.n(p),u=t(426),m={};m.styleTagTransform=A(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=s(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var C=t(322),f=t(304);document.body.appendChild(function(){const e=document.createElement("div");return e.classList.add("main"),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("header"),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("sidebar"),e.appendChild((0,f.Z)()),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("taskcontainer"),e.appendChild((0,C.Z)()),e}()),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,