(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),c=n.n(i)()(o());c.push([e.id,"html,\nbody {\n    width: 100%;\n    height: 100%;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n}\n\ndiv[class*='todo'] {\n    border: 1px solid black;\n}\ndiv[class*='project'] {\n    border: 1px solid black;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,WAAW;IACX,YAAY;AAChB;AACA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,SAAS;AACb;;;AAGA;IACI,kBAAkB;IAClB,WAAW;IACX,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,WAAW;IACX,uBAAuB;AAC3B;AACA;IACI,cAAc;IACd,WAAW;IACX,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;AAC3B;AACA;IACI,uBAAuB;AAC3B",sourcesContent:["html,\nbody {\n    width: 100%;\n    height: 100%;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n}\n\ndiv[class*='todo'] {\n    border: 1px solid black;\n}\ndiv[class*='project'] {\n    border: 1px solid black;\n}"],sourceRoot:""}]);const a=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&c[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},c=[],a=0;a<e.length;a++){var d=e[a],s=r.base?d[0]+r.base:d[0],l=i[s]||0,u="".concat(s," ").concat(l);i[s]=l+1;var p=n(u),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=o(m,r);r.byIndex=a,t.splice(a,0,{identifier:u,updater:A,references:1})}c.push(u)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=n(i[c]);t[a].references--}for(var d=r(e,o),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},865:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(304);const o=function(e,t,n,o){this.id=e,this.title=t,this.connector=n,this.arr=o,n=(0,r.w0)(),console.log(n)}},304:(e,t,n)=>{n.d(t,{ZP:()=>i,w0:()=>d});var r=n(865),o=n(322);function i(){const e=document.createElement("form");return e.classList.add("form"),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","title"),e.innerHTML="Title";const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("name","title"),t.setAttribute("id","title"),e.appendChild(t),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","create");const t=document.createElement("input");return t.setAttribute("type","button"),t.setAttribute("value","Create New"),t.setAttribute("name","create"),t.setAttribute("id","create"),t.addEventListener("click",(function(e){a=[];const t=document.getElementById("title").value,n=document.createElement("div");n.classList.add("project"+c.length);const i=document.createElement("h1");i.innerHTML=t,n.appendChild(i),n.addEventListener("click",(function(){document.getElementsByClassName("taskcontainer")[0];for(let e of o.jK)a.push(e);o.jK.splice(0,o.jK.length);for(let e of a)console.log(e)})),function(){const e=document.getElementById("title").value,t=c.length;c.push(new r.Z(t,e,d,a)),console.log(c)}();const s=document.createElement("button");s.innerHTML="Delete",s.addEventListener("click",(function(){return l.removeChild(n)})),s.addEventListener("click",(function(){return c.splice(c.length-1,1)})),n.appendChild(s);const l=document.getElementsByClassName("sidebar")[0];l.appendChild(n)})),e.appendChild(t),e}()),e}const c=[];let a=[];function d(){return document.getElementsByClassName("project"+c.length)}},507:(e,t,n)=>{n.d(t,{Z:()=>r});const r=function(e,t,n,r,o){this.id=e,this.description=t,this.dueDate=n,this.priority=r,this.connector=o}},322:(e,t,n)=>{n.d(t,{ZP:()=>o,jK:()=>i});var r=n(507);function o(){const e=document.createElement("form");return e.classList.add("form"),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","description"),e.innerHTML="Description";const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("name","description"),t.setAttribute("id","description"),e.appendChild(t),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","dueDate"),e.innerHTML="Due Date";const t=document.createElement("input");return t.setAttribute("type","date"),t.setAttribute("name","dueDate"),t.setAttribute("id","dueDate"),e.appendChild(t),e}()),e.appendChild(function(){const e=document.createElement("select");e.setAttribute("name","priority"),e.setAttribute("id","priority");const t=document.createElement("option");t.setAttribute("value","Urgent"),t.innerHTML="Urgent";const n=document.createElement("option");n.setAttribute("value","Normal"),n.innerHTML="Normal";const r=document.createElement("option");return r.setAttribute("value","Low"),r.innerHTML="Low",e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","addTodo");const t=document.createElement("input");return t.setAttribute("type","button"),t.setAttribute("value","Add"),t.setAttribute("name","addTodo"),t.setAttribute("id","addTodo"),t.addEventListener("click",(function(e){const t=document.getElementById("description").value,n=document.getElementById("dueDate").value,o=document.getElementById("priority").value;!function(){const e=document.getElementById("description").value,t=document.getElementById("dueDate").value,n=document.getElementById("priority").value,o=i.length;i.push(new r.Z(o,e,t,n,c)),console.log(i),console.log(o)}();const a=document.createElement("div");a.classList.add("todo"+i.length),a.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","checklist");const t=document.createElement("input");return t.setAttribute("type","checkbox"),t.setAttribute("name","checklist"),t.setAttribute("id","checklist"),e.appendChild(t),e}());const d=document.createElement("p");d.innerHTML=t,a.appendChild(d);const s=document.createElement("p");s.innerHTML=n,a.appendChild(s);const l=document.createElement("p");l.innerHTML=o,a.appendChild(l);const u=document.createElement("button");u.innerHTML="Delete",u.addEventListener("click",(function(){return p.removeChild(a)})),u.addEventListener("click",(function(){return i.splice(i.length-1,1)})),a.appendChild(u);const p=document.getElementsByClassName("taskcontainer")[0];p.appendChild(a)})),e.appendChild(t),e}()),e}const i=[];function c(){return document.getElementsByClassName("todo"+i.length)}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),i=n(569),c=n.n(i),a=n(565),d=n.n(a),s=n(216),l=n.n(s),u=n(589),p=n.n(u),m=n(426),A={};A.styleTagTransform=p(),A.setAttributes=d(),A.insert=c().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=l(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;var f=n(322),h=n(304);document.body.appendChild(function(){const e=document.createElement("div");return e.classList.add("main"),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("header"),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("sidebar"),e.appendChild((0,h.ZP)()),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("taskcontainer"),e.appendChild((0,f.ZP)()),e}()),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBSSxJQUFTL0MsR0FLSixLQUFXLFlBQWlCLFcsc0JDbUJsRDhCLFNBQVN1RyxLQUFLOUYsWUF6Q2QsV0FDRSxNQUFNQyxFQUFVVixTQUFTVyxjQUFjLE9BT3ZDLE9BTkFELEVBQVF3QixVQUFVQyxJQUFJLFFBRXRCekIsRUFBUUQsWUFRVixXQUNFLE1BQU0rRixFQUFTeEcsU0FBU1csY0FBYyxPQUd0QyxPQUZBNkYsRUFBT3RFLFVBQVVDLElBQUksVUFFZHFFLENBQ1QsQ0Fic0JBLElBQ3BCOUYsRUFBUUQsWUFjVixXQUNFLE1BQU1nRyxFQUFVekcsU0FBU1csY0FBYyxPQUt2QyxPQUpBOEYsRUFBUXZFLFVBQVVDLElBQUksV0FFdEJzRSxFQUFRaEcsYUFBWSxXQUViZ0csQ0FDVCxDQXJCc0JBLElBQ3BCL0YsRUFBUUQsWUFzQlYsV0FDRSxNQUFNaUcsRUFBZ0IxRyxTQUFTVyxjQUFjLE9BSzdDLE9BSkErRixFQUFjeEUsVUFBVUMsSUFBSSxpQkFFMUJ1RSxFQUFjakcsYUFBWSxXQUVyQmlHLENBQ1QsQ0E3QnNCQSxJQUViaEcsQ0FDVCxDQWdDMEJpRyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2ZvbGRlci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvZm9sZGVyRE9NLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90YXNrRE9NLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJodG1sLFxcbmJvZHkge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbn1cXG4ubWFpbiB7XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGhlaWdodDogOTAlO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDRmcjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG5cXG4uaGVhZGVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEgLyAzO1xcbiAgICBncmlkLXJvdzogMTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcbi5zaWRlYmFyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEgO1xcbiAgICBncmlkLXJvdzogMjtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcbi50YXNrY29udGFpbmVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDI7XFxuICAgIGdyaWQtcm93OiAyO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG59XFxuXFxuZGl2W2NsYXNzKj0ndG9kbyddIHtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcbmRpdltjbGFzcyo9J3Byb2plY3QnXSB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztJQUVJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsV0FBVztJQUNYLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLFNBQVM7QUFDYjs7O0FBR0E7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLFdBQVc7SUFDWCx1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLGNBQWM7SUFDZCxXQUFXO0lBQ1gsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSx1QkFBdUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCxcXG5ib2R5IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuLm1haW4ge1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBoZWlnaHQ6IDkwJTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgM2ZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA0ZnI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuXFxuLmhlYWRlciB7XFxuICAgIGdyaWQtY29sdW1uOiAxIC8gMztcXG4gICAgZ3JpZC1yb3c6IDE7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbn1cXG4uc2lkZWJhciB7XFxuICAgIGdyaWQtY29sdW1uOiAxIDtcXG4gICAgZ3JpZC1yb3c6IDI7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbn1cXG4udGFza2NvbnRhaW5lciB7XFxuICAgIGdyaWQtY29sdW1uOiAyO1xcbiAgICBncmlkLXJvdzogMjtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcblxcbmRpdltjbGFzcyo9J3RvZG8nXSB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbn1cXG5kaXZbY2xhc3MqPSdwcm9qZWN0J10ge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiaW1wb3J0IHsgZG9tRWxlbWVudCwgbmV3bGlzdCB9IGZyb20gXCIuL2ZvbGRlckRPTVwiO1xuaW1wb3J0IHsgbXl0b2RvIH0gZnJvbSBcIi4vdGFza0RPTVwiO1xuXG5cbmNvbnN0IGZvbGRlciA9IGZ1bmN0aW9uKGlkLCB0aXRsZSwgY29ubmVjdG9yLCBhcnIpIHtcbiAgICB0aGlzLmlkID0gaWQsXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlLFxuICAgIHRoaXMuY29ubmVjdG9yID0gY29ubmVjdG9yLFxuICAgIHRoaXMuYXJyID0gYXJyXG5cbiAgICBjb25uZWN0b3IgPSAgZG9tRWxlbWVudCgpO1xuICAgIGNvbnNvbGUubG9nKGNvbm5lY3Rvcik7XG5cbn1cblxuXG5cbmV4cG9ydCBkZWZhdWx0IGZvbGRlcjtcbiIsImltcG9ydCBmb2xkZXIgZnJvbSBcIi4vZm9sZGVyXCI7XG5pbXBvcnQgeyBteXRvZG8gfSBmcm9tIFwiLi90YXNrRE9NXCI7XG5pbXBvcnQgeyBkb21FbGVtZW50MiB9IGZyb20gXCIuL3Rhc2tET01cIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvbGRlcmZvcm0gKCkge1xuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gICAgZm9ybS5jbGFzc0xpc3QuYWRkKFwiZm9ybVwiKTtcblxuICAgIGZvcm0uYXBwZW5kQ2hpbGQodGl0bGUoKSk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChjcmVhdGUoKSk7XG5cbiAgICByZXR1cm4gZm9ybTsgXG59XG5cbmZ1bmN0aW9uIHRpdGxlICgpIHtcbiAgICBjb25zdCB0aXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICB0aXRsZUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcInRpdGxlXCIpO1xuICAgIHRpdGxlTGFiZWwuaW5uZXJIVE1MID0gXCJUaXRsZVwiO1xuXG4gICAgY29uc3QgdGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInRpdGxlXCIpO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0aXRsZVwiKTtcblxuICAgIHRpdGxlTGFiZWwuYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG5cbiAgICByZXR1cm4gdGl0bGVMYWJlbDtcbn1cblxuY29uc3QgbXlQcm9qZWN0cyA9IFtdO1xubGV0IG5ld2xpc3QgPSBbXTtcbmZ1bmN0aW9uIGNyZWF0ZSAoKSB7XG4gICAgY29uc3QgY3JlYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGNyZWF0ZUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImNyZWF0ZVwiKTtcblxuICAgIGNvbnN0IGNyZWF0ZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGNyZWF0ZUlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJidXR0b25cIik7XG4gICAgY3JlYXRlSW5wdXQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJDcmVhdGUgTmV3XCIpO1xuICAgIGNyZWF0ZUlucHV0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJjcmVhdGVcIik7XG4gICAgY3JlYXRlSW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJjcmVhdGVcIik7XG5cbi8vIENyZWF0ZSBOZXcgYnV0dG9uIGZ1bmN0aW9uYWxpdHlcbiAgICBjcmVhdGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY3JlYXRlUHJvamVjdCk7XG4gICAgZnVuY3Rpb24gY3JlYXRlUHJvamVjdChldmVudCl7XG4gICAgICAgIG5ld2xpc3QgPSBbXTtcbiAgICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlO1xuICAgICAgICBcblxuICAgICAgICAvLyBjcmVhdGluZyBkb20gZm9yIGJ1dHRvblxuICAgICAgICBjb25zdCBwcm9qZWN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgcHJvamVjdERpdi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdFwiICsgbXlQcm9qZWN0cy5sZW5ndGgpO1xuICAgICAgICBjb25zdCBwcm9qZWN0SCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICAgICAgcHJvamVjdEguaW5uZXJIVE1MID0gdGl0bGU7XG4gICAgICAgIHByb2plY3REaXYuYXBwZW5kQ2hpbGQocHJvamVjdEgpO1xuXG4gICAgICAgIHByb2plY3REaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHN3aXRjaFByb2plY3QpXG4gICAgICAgIGZ1bmN0aW9uIHN3aXRjaFByb2plY3QoKXtcbiAgICAgICAgICAgIC8vb25jbGljayBzd2l0Y2hpbmcgYmV0d2VlbiB0b2RvIFxuICAgICAgICBjb25zdCB0YXNrY29udGFpbmVycHIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwidGFza2NvbnRhaW5lclwiKVswXTtcblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBmb3IgKGxldCBpdGVtIG9mIG15dG9kbyl7XG4gICAgICAgICAgICAgICAgbmV3bGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbXl0b2RvLnNwbGljZSgwLCBteXRvZG8ubGVuZ3RoKTtcbiAgICAgICAgICAgIGZvciAobGV0IGl0ZW0gb2YgbmV3bGlzdCl7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coaXRlbSlcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIH07XG4gICAgICAgIHdvcmtpbmdPbk9iamVjdCgpO1xuICAgICAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBkZWxldGVCdXR0b24uaW5uZXJIVE1MID0gXCJEZWxldGVcIjtcbiAgICAgICAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe3JldHVybiBzaWRlYmFycHIucmVtb3ZlQ2hpbGQocHJvamVjdERpdil9KTtcbiAgICAgICAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe3JldHVybiBteVByb2plY3RzLnNwbGljZShteVByb2plY3RzLmxlbmd0aCAtIDEsIDEpfSk7XG4gICAgICAgIHByb2plY3REaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcblxuXG4gICAgICAgIGNvbnN0IHNpZGViYXJwciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzaWRlYmFyXCIpWzBdO1xuICAgICBcbiAgICAgIHNpZGViYXJwci5hcHBlbmRDaGlsZChwcm9qZWN0RGl2KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB3b3JraW5nT25PYmplY3QgKCkge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIikudmFsdWU7XG4gICAgICAgIGNvbnN0IGlkID0gbXlQcm9qZWN0cy5sZW5ndGg7XG4gICAgICAgIG15UHJvamVjdHMucHVzaChuZXcgZm9sZGVyKGlkLCB0aXRsZSwgZG9tRWxlbWVudCwgbmV3bGlzdCkpO1xuICAgICAgICBjb25zb2xlLmxvZyhteVByb2plY3RzKTtcbi8vICAgICAgICBjb25zb2xlLmxvZyhpZCk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbXlQcm9qZWN0cztcbiAgICB9XG4gICAgXG4gICAgXG5cbiAgICBjcmVhdGVMYWJlbC5hcHBlbmRDaGlsZChjcmVhdGVJbnB1dCk7XG5cbiAgICByZXR1cm4gY3JlYXRlTGFiZWw7XG59XG5cblxuZnVuY3Rpb24gZG9tRWxlbWVudCAoKSB7XG4gICAgY29uc3QgZG9tZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwicHJvamVjdFwiICsgbXlQcm9qZWN0cy5sZW5ndGgpO1xuICAgIFxuICAgIHJldHVybiBkb21lbDtcbn1cblxuXG5leHBvcnQgeyBkb21FbGVtZW50LCBteVByb2plY3RzIH0iLCJcblxuY29uc3QgdGFzayA9IGZ1bmN0aW9uKGlkLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIGNvbm5lY3Rvcikge1xuICB0aGlzLmlkID0gaWQsXG4gIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbixcbiAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZSxcbiAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5LFxuICB0aGlzLmNvbm5lY3RvciA9IGNvbm5lY3RvclxuXG59XG5leHBvcnQgZGVmYXVsdCB0YXNrOyIsImltcG9ydCB0YXNrIGZyb20gXCIuL3Rhc2suanNcIjtcbmltcG9ydCB7IG5ld2xpc3QgfSBmcm9tIFwiLi9mb2xkZXIuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRhc2tmb3JtKCkge1xuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gICAgZm9ybS5jbGFzc0xpc3QuYWRkKFwiZm9ybVwiKTtcblxuLy8gICAgZm9ybS5hcHBlbmRDaGlsZChjaGVja2xpc3QoKSk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbigpKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGR1ZURhdGUoKSk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChwcmlvcml0eSgpKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGFkZFRvZG8oKSk7XG5cbiAgICByZXR1cm4gZm9ybTsgXG59XG5mdW5jdGlvbiBkZXNjcmlwdGlvbigpIHtcbiAgICBjb25zdCBkZXNjcmlwdGlvbkxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBkZXNjcmlwdGlvbkxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImRlc2NyaXB0aW9uXCIpO1xuICAgIGRlc2NyaXB0aW9uTGFiZWwuaW5uZXJIVE1MID0gXCJEZXNjcmlwdGlvblwiO1xuXG4gICAgY29uc3QgZGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBkZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuICAgIGRlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcImRlc2NyaXB0aW9uXCIpO1xuICAgIGRlc2NyaXB0aW9uSW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkZXNjcmlwdGlvblwiKTtcblxuICAgIGRlc2NyaXB0aW9uTGFiZWwuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25JbnB1dCk7XG5cbiAgICByZXR1cm4gZGVzY3JpcHRpb25MYWJlbDtcbn1cblxuZnVuY3Rpb24gZHVlRGF0ZSgpIHtcbiAgICBjb25zdCBkdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGR1ZURhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJkdWVEYXRlXCIpO1xuICAgIGR1ZURhdGVMYWJlbC5pbm5lckhUTUwgPSBcIkR1ZSBEYXRlXCI7XG5cbiAgICBjb25zdCBkdWVEYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJkYXRlXCIpO1xuICAgIGR1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiZHVlRGF0ZVwiKTtcbiAgICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkdWVEYXRlXCIpO1xuXG4gICAgZHVlRGF0ZUxhYmVsLmFwcGVuZENoaWxkKGR1ZURhdGVJbnB1dCk7XG5cbiAgICByZXR1cm4gZHVlRGF0ZUxhYmVsO1xufVxuXG5mdW5jdGlvbiBwcmlvcml0eSgpIHtcbiAgICBjb25zdCBwcmlvcml0eVNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICAgcHJpb3JpdHlTZWxlY3Quc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInByaW9yaXR5XCIpO1xuICAgIHByaW9yaXR5U2VsZWN0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwicHJpb3JpdHlcIik7XG5cbiAgICBjb25zdCBvcHRpb24xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgb3B0aW9uMS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIlVyZ2VudFwiKTtcbiAgICBvcHRpb24xLmlubmVySFRNTCA9IFwiVXJnZW50XCI7XG5cbiAgICBjb25zdCBvcHRpb24yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgb3B0aW9uMi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIk5vcm1hbFwiKTtcbiAgICBvcHRpb24yLmlubmVySFRNTCA9IFwiTm9ybWFsXCI7XG5cbiAgICBjb25zdCBvcHRpb24zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgb3B0aW9uMy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIkxvd1wiKTtcbiAgICBvcHRpb24zLmlubmVySFRNTCA9IFwiTG93XCI7XG5cbiAgICBwcmlvcml0eVNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24xKTtcbiAgICBwcmlvcml0eVNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24yKTtcbiAgICBwcmlvcml0eVNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24zKTtcblxuICAgIHJldHVybiBwcmlvcml0eVNlbGVjdDtcbn1cbiAgICAgIFxuZnVuY3Rpb24gY2hlY2tsaXN0KCkge1xuICAgIGNvbnN0IGNoZWNrbGlzdExhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBjaGVja2xpc3RMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJjaGVja2xpc3RcIik7XG5cbiAgICBjb25zdCBjaGVja2xpc3RJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBjaGVja2xpc3RJbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiY2hlY2tib3hcIik7XG4gICAgY2hlY2tsaXN0SW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcImNoZWNrbGlzdFwiKTtcbiAgICBjaGVja2xpc3RJbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImNoZWNrbGlzdFwiKTtcblxuICAgIGNoZWNrbGlzdExhYmVsLmFwcGVuZENoaWxkKGNoZWNrbGlzdElucHV0KTtcblxuICAgIHJldHVybiBjaGVja2xpc3RMYWJlbDtcbn1cbiAgICBjb25zdCBteXRvZG8gPSBbXTtcbmZ1bmN0aW9uIGFkZFRvZG8oKSB7XG4gICAgY29uc3QgYWRkVG9kb0xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBhZGRUb2RvTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwiYWRkVG9kb1wiKTtcblxuICAgIGNvbnN0IGFkZFRvZG9JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBhZGRUb2RvSW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImJ1dHRvblwiKTtcbiAgICBhZGRUb2RvSW5wdXQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJBZGRcIik7XG4gICAgYWRkVG9kb0lucHV0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJhZGRUb2RvXCIpO1xuICAgIGFkZFRvZG9JbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImFkZFRvZG9cIik7XG5cblxuICAgIC8vYnV0dG9uIGZ1bmN0aW9uYWxpdHlcbiAgICBhZGRUb2RvSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGNyZWF0ZVRvZG8pO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlVG9kbyhldmVudCl7XG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKS52YWx1ZTtcbiAgICAgICAgY29uc3QgZHVlRGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHVlRGF0ZVwiKS52YWx1ZTtcbiAgICAgICAgY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByaW9yaXR5XCIpLnZhbHVlO1xuICAgICAgICB0b2RvZG9tRWxlbWVudCgpO1xuXG4gICAgICAgIC8vIGNyZWF0aW5nIGRvbSBmb3IgYnV0dG9uXG4gICAgICAgIGNvbnN0IHRvZG9EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICB0b2RvRGl2LmNsYXNzTGlzdC5hZGQoXCJ0b2RvXCIgKyBteXRvZG8ubGVuZ3RoKTtcbiAgICAgICAgdG9kb0Rpdi5hcHBlbmRDaGlsZChjaGVja2xpc3QoKSk7XG4gICAgICAgIC8vYWRkaW5nIGRlc2NyaXB0aW9uXG4gICAgICAgIGNvbnN0IHRvZG9wMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICB0b2RvcDEuaW5uZXJIVE1MID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRvZG9EaXYuYXBwZW5kQ2hpbGQodG9kb3AxKTtcbiAgICAgICAgLy9hZGRpbmcgZHVlIGRhdGVcbiAgICAgICAgY29uc3QgdG9kb3AyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgIHRvZG9wMi5pbm5lckhUTUwgPSBkdWVEYXRlO1xuICAgICAgICB0b2RvRGl2LmFwcGVuZENoaWxkKHRvZG9wMik7XG4gICAgICAgIC8vYWRkaW5nIHByaW9yaXR5XG4gICAgICAgIGNvbnN0IHRvZG9wMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICB0b2RvcDMuaW5uZXJIVE1MID0gcHJpb3JpdHk7XG4gICAgICAgIHRvZG9EaXYuYXBwZW5kQ2hpbGQodG9kb3AzKTtcblxuICAgICAgICBcbiAgICAgICAgY29uc3QgZGVsZXRlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgZGVsZXRlQnV0dG9uLmlubmVySFRNTCA9IFwiRGVsZXRlXCI7XG4gICAgICAgIGRlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtyZXR1cm4gdGFza2NvbnRhaW5lcnByLnJlbW92ZUNoaWxkKHRvZG9EaXYpfSk7XG4gICAgICAgIGRlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtyZXR1cm4gbXl0b2RvLnNwbGljZShteXRvZG8ubGVuZ3RoIC0gMSwgMSl9KTtcbiAgICAgICAgdG9kb0Rpdi5hcHBlbmRDaGlsZChkZWxldGVCdXR0b24pO1xuXG4gICAgIGNvbnN0IHRhc2tjb250YWluZXJwciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJ0YXNrY29udGFpbmVyXCIpWzBdO1xuICAgICAgdGFza2NvbnRhaW5lcnByLmFwcGVuZENoaWxkKHRvZG9EaXYpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRvZG9kb21FbGVtZW50ICgpIHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2NyaXB0aW9uXCIpLnZhbHVlO1xuICAgICAgICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkdWVEYXRlXCIpLnZhbHVlO1xuICAgICAgICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJpb3JpdHlcIikudmFsdWU7XG4gICAgICAgIGNvbnN0IGlkID0gbXl0b2RvLmxlbmd0aDtcblxuICAgICAgICBteXRvZG8ucHVzaChuZXcgdGFzayhpZCwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBkb21FbGVtZW50MikpO1xuICAgICAgICBjb25zb2xlLmxvZyhteXRvZG8pO1xuICAgICAgICBjb25zb2xlLmxvZyhpZCk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbXl0b2RvO1xufVxuXG5hZGRUb2RvTGFiZWwuYXBwZW5kQ2hpbGQoYWRkVG9kb0lucHV0KTtcblxuICAgIHJldHVybiBhZGRUb2RvTGFiZWw7XG59XG5cbmZ1bmN0aW9uIGRvbUVsZW1lbnQyICgpIHtcblxuICAgIGNvbnN0IGRvbWVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInRvZG9cIiArIG15dG9kby5sZW5ndGgpO1xuICAgIFxuICAgIHJldHVybiBkb21lbDtcbn1cblxuZXhwb3J0IHtkb21FbGVtZW50MiwgbXl0b2RvfSIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IHRhc2tkb20gZnJvbSAnLi90YXNrRE9NJztcbmltcG9ydCBmb2xkZXJmb3JtIGZyb20gJy4vZm9sZGVyRE9NJztcblxuZnVuY3Rpb24gbGF5b3V0KCkge1xuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1haW5cIik7XG5cbiAgZWxlbWVudC5hcHBlbmRDaGlsZChoZWFkZXIoKSk7XG4gIGVsZW1lbnQuYXBwZW5kQ2hpbGQoc2lkZWJhcigpKTtcbiAgZWxlbWVudC5hcHBlbmRDaGlsZCh0YXNrY29udGFpbmVyKCkpO1xuXG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5cbmZ1bmN0aW9uIGhlYWRlcigpIHtcbiAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJoZWFkZXJcIik7XG5cbiAgcmV0dXJuIGhlYWRlcjtcbn1cblxuZnVuY3Rpb24gc2lkZWJhcigpIHtcbiAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHNpZGViYXIuY2xhc3NMaXN0LmFkZChcInNpZGViYXJcIik7XG5cbiAgc2lkZWJhci5hcHBlbmRDaGlsZChmb2xkZXJmb3JtKCkpO1xuXG4gIHJldHVybiBzaWRlYmFyO1xufVxuXG5mdW5jdGlvbiB0YXNrY29udGFpbmVyKCkge1xuICBjb25zdCB0YXNrY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza2NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGFza2NvbnRhaW5lclwiKTtcblxuICAgIHRhc2tjb250YWluZXIuYXBwZW5kQ2hpbGQodGFza2RvbSgpKTtcblxuICByZXR1cm4gdGFza2NvbnRhaW5lcjtcbn1cblxuXG5cbmV4cG9ydCB7aGVhZGVyLCBzaWRlYmFyLCB0YXNrY29udGFpbmVyfVxuXG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxheW91dCgpKTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsInRpdGxlIiwiY29ubmVjdG9yIiwiYXJyIiwiY29uc29sZSIsImxvZyIsImZvbGRlcmZvcm0iLCJmb3JtIiwiY2xhc3NMaXN0IiwiYWRkIiwidGl0bGVMYWJlbCIsImlubmVySFRNTCIsInRpdGxlSW5wdXQiLCJjcmVhdGVMYWJlbCIsImNyZWF0ZUlucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwibmV3bGlzdCIsImdldEVsZW1lbnRCeUlkIiwidmFsdWUiLCJwcm9qZWN0RGl2IiwibXlQcm9qZWN0cyIsInByb2plY3RIIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImRvbUVsZW1lbnQiLCJ3b3JraW5nT25PYmplY3QiLCJkZWxldGVCdXR0b24iLCJzaWRlYmFycHIiLCJjcmVhdGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcmlvcml0eSIsInRhc2tmb3JtIiwiZGVzY3JpcHRpb25MYWJlbCIsImRlc2NyaXB0aW9uSW5wdXQiLCJkdWVEYXRlTGFiZWwiLCJkdWVEYXRlSW5wdXQiLCJwcmlvcml0eVNlbGVjdCIsIm9wdGlvbjEiLCJvcHRpb24yIiwib3B0aW9uMyIsImFkZFRvZG9MYWJlbCIsImFkZFRvZG9JbnB1dCIsIm15dG9kbyIsImRvbUVsZW1lbnQyIiwidG9kb2RvbUVsZW1lbnQiLCJ0b2RvRGl2IiwiY2hlY2tsaXN0TGFiZWwiLCJjaGVja2xpc3RJbnB1dCIsImNoZWNrbGlzdCIsInRvZG9wMSIsInRvZG9wMiIsInRvZG9wMyIsInRhc2tjb250YWluZXJwciIsImFkZFRvZG8iLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiYm9keSIsImhlYWRlciIsInNpZGViYXIiLCJ0YXNrY29udGFpbmVyIiwibGF5b3V0Il0sInNvdXJjZVJvb3QiOiIifQ==