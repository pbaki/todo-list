(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([e.id,"html,\nbody {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    margin: 20px auto;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n    border-radius: 10px;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n\n\ndiv[class*='todo'] {\n    border: 2px solid rgb(5, 116, 14);\n    border-radius: 20px;\n    margin-left: 20px;\n    margin-right: 25px;\n    display: flex;\n    justify-content: space-between;\n}\ndiv[class*='project'] {\n    border: 2px solid rgb(5, 116, 14);\n    border-radius: 20px;\n    padding: 10px 15px;\n    margin-left: 5px;\n    margin-right: 10px;\n}\ndiv[class*='project']:active {\n    border: 2px solid yellow;\n}\ndiv[class*='project'] h2 {\n    margin: 0 0 15px 0;\n}\n\n.folderForm {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:space-between;\n    gap: 5px;\n    border: 2px solid rgb(38, 194, 51);\n    border-radius: 20px;\n    padding: 6px 12px;\n    margin: 5px 8px;\n\n}\n\n#title {\n    margin: 5px;\n}\n#description {\n    margin: 5px;\n    width: 400px;\n}\n#dueDate {\n    margin: 5px;\n}\n#priority {\n    margin: 5px;\n}\n#addTodo {\n    margin: 5px;\n}\n.descContainer, .restContainer {\n    border: 2px solid rgb(38, 194, 51);\n    border-radius: 20px;\n    margin: 5px 10px;\n    padding: 5px 10px;\n}\n\n.taskForm {\n    display: flex;\n    justify-content: space-between;\n    gap: 5px;\n    margin: 0px 10px;\n}\n\n.left {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.right {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n.header h1 {\n    margin: 30px 40px;\n\n\n}\nbutton {\n    all: unset;\n    cursor: pointer;\n    border: 2px solid rgb(38, 194, 51);\n    border-radius: 20px;\n    padding: 3px 6px;\n    background-color: aliceblue;\n}\nbutton:active {\n  outline: orange 5px auto;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,WAAW;IACX,YAAY;IACZ,SAAS;AACb;AACA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,iBAAiB;IACjB,8BAA8B;IAC9B,2BAA2B;IAC3B,SAAS;AACb;;;AAGA;IACI,kBAAkB;IAClB,WAAW;IACX,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,eAAe;IACf,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;AACA;IACI,cAAc;IACd,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;;;AAGA;IACI,iCAAiC;IACjC,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,iCAAiC;IACjC,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,QAAQ;IACR,kCAAkC;IAClC,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;;AAEnB;;AAEA;IACI,WAAW;AACf;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;AACf;AACA;IACI,kCAAkC;IAClC,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,iBAAiB;;;AAGrB;AACA;IACI,UAAU;IACV,eAAe;IACf,kCAAkC;IAClC,mBAAmB;IACnB,gBAAgB;IAChB,2BAA2B;AAC/B;AACA;EACE,wBAAwB;AAC1B",sourcesContent:["html,\nbody {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    margin: 20px auto;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n    border-radius: 10px;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n}\n\n\ndiv[class*='todo'] {\n    border: 2px solid rgb(5, 116, 14);\n    border-radius: 20px;\n    margin-left: 20px;\n    margin-right: 25px;\n    display: flex;\n    justify-content: space-between;\n}\ndiv[class*='project'] {\n    border: 2px solid rgb(5, 116, 14);\n    border-radius: 20px;\n    padding: 10px 15px;\n    margin-left: 5px;\n    margin-right: 10px;\n}\ndiv[class*='project']:active {\n    border: 2px solid yellow;\n}\ndiv[class*='project'] h2 {\n    margin: 0 0 15px 0;\n}\n\n.folderForm {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content:space-between;\n    gap: 5px;\n    border: 2px solid rgb(38, 194, 51);\n    border-radius: 20px;\n    padding: 6px 12px;\n    margin: 5px 8px;\n\n}\n\n#title {\n    margin: 5px;\n}\n#description {\n    margin: 5px;\n    width: 400px;\n}\n#dueDate {\n    margin: 5px;\n}\n#priority {\n    margin: 5px;\n}\n#addTodo {\n    margin: 5px;\n}\n.descContainer, .restContainer {\n    border: 2px solid rgb(38, 194, 51);\n    border-radius: 20px;\n    margin: 5px 10px;\n    padding: 5px 10px;\n}\n\n.taskForm {\n    display: flex;\n    justify-content: space-between;\n    gap: 5px;\n    margin: 0px 10px;\n}\n\n.left {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.right {\n    margin: 5px 10px;\n    gap: 10px;\n    display: flex;\n    align-items: center;\n}\n.header h1 {\n    margin: 30px 40px;\n\n\n}\nbutton {\n    all: unset;\n    cursor: pointer;\n    border: 2px solid rgb(38, 194, 51);\n    border-radius: 20px;\n    padding: 3px 6px;\n    background-color: aliceblue;\n}\nbutton:active {\n  outline: orange 5px auto;\n}\n"],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(o[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},o=[],d=0;d<e.length;d++){var c=e[d],s=r.base?c[0]+r.base:c[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=i(u,r);r.byIndex=d,n.splice(d,0,{identifier:A,updater:m,references:1})}o.push(A)}return o}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var a=r(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var d=t(a[o]);n[d].references--}for(var c=r(e,i),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},865:(e,n,t)=>{t.d(n,{Z:()=>r});const r=function(e,n,t,r){this.id=e,this.title=n,this.arr=t,this.domElement=r}},304:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(610);function i(){const e=document.createElement("form");return e.classList.add("folderForm"),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","title"),e.innerHTML="Title";const n=document.createElement("input");return n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("id","title"),e.appendChild(n),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","create");const n=document.createElement("input");return n.setAttribute("type","button"),n.setAttribute("value","Create New"),n.setAttribute("name","create"),n.setAttribute("id","create"),n.addEventListener("click",(()=>{(0,r.R)()})),e.appendChild(n),e}()),e}},610:(e,n,t)=>{t.d(n,{R:()=>o});var r=t(865),i=t(787);let a=[],o=function(){const e=document.getElementById("title").value,n=document.createElement("div"),t=Math.random().toString(16).slice(2);n.classList.add("project"+t);const o=document.createElement("h2");o.innerHTML=e,n.appendChild(o);const d=a.length,c=[];a.push(new r.Z(d,e,c,n)),console.log(a),n.addEventListener("click",(function(){const t=document.createElement("label");t.setAttribute("for","addTodo");const o=document.createElement("input");o.setAttribute("type","button"),o.setAttribute("value","Add"),o.setAttribute("name","addTodo"),o.setAttribute("id","addTodo");const s=document.getElementsByClassName("restContainer")[0];for(;s.children[2];)s.removeChild(s.lastChild);s.appendChild(t),o.addEventListener("click",(function(){const t=document.getElementById("description").value,o=document.getElementById("dueDate").value,s=document.getElementById("priority").value,l=document.createElement("div");l.classList.add("left");const A=document.createElement("div");A.classList.add("right");const u=Math.random().toString(16).slice(2),m=document.createElement("div");m.classList.add("todo"+u);const C=document.createElement("p");C.innerHTML=t;const g=document.createElement("p");g.innerHTML=o;const f=document.createElement("p");f.innerHTML=s;const x=document.createElement("button");x.innerHTML="Delete",x.addEventListener("click",(function(){return m.parentNode.removeChild(m)})),x.addEventListener("click",(function(){return p.splice(p.findIndex((e=>e.className===m.className)),1),p})),l.appendChild((0,i.FP)()),l.appendChild(C),A.appendChild(g),A.appendChild(f),A.appendChild(x),m.appendChild(l),m.appendChild(A);document.getElementsByClassName("taskcontainer")[0].appendChild(m),a.push(new r.Z(d,e,c,n)),p.push(m)})),t.appendChild(o);const l=document.getElementsByClassName("taskcontainer")[0];for(;l.children[1];)l.removeChild(l.lastChild);let A=a.findIndex((e=>e.domElement.className===n.className));if(-1!=A){var p=a[A].arr;for(let e of p)l.appendChild(e)}}));const s=document.createElement("button");s.innerHTML="Delete",s.addEventListener("click",(function(){return n.parentNode.removeChild(n)})),s.addEventListener("click",(function(){return a.splice(a.findIndex((e=>e.domElement.className===n.className)),1),a})),n.appendChild(s),document.getElementsByClassName("sidebar")[0].appendChild(n)}},507:(e,n,t)=>{t.d(n,{Z:()=>r});const r=function(e,n,t,r,i){this.id=e,this.description=n,this.dueDate=t,this.priority=r,this.connector=i}},787:(e,n,t)=>{t.d(n,{FP:()=>d,is:()=>a});var r=t(507);const i=[];let a=function(e){const n=document.getElementById("description").value,t=document.getElementById("dueDate").value,a=document.getElementById("priority").value;!function(){const e=document.getElementById("description").value,n=document.getElementById("dueDate").value,t=document.getElementById("priority").value,a=i.length;i.push(new r.Z(a,e,n,t,o)),console.log(i),console.log(a)}();const c=document.createElement("div");c.classList.add("left");const s=document.createElement("div");s.classList.add("right");const l=document.createElement("div");l.classList.add("todo"+i.length);const A=document.createElement("p");A.innerHTML=n;const p=document.createElement("p");p.innerHTML=t;const u=document.createElement("p");u.innerHTML=a;const m=document.createElement("button");m.innerHTML="Delete",m.addEventListener("click",(function(){return C.removeChild(l)})),m.addEventListener("click",(function(){return i.splice(i.length-1,1)})),c.appendChild(d()),c.appendChild(A),s.appendChild(p),s.appendChild(u),s.appendChild(m),l.appendChild(c),l.appendChild(s);const C=document.getElementsByClassName("taskcontainer")[0];C.appendChild(l)};function o(){return document.getElementsByClassName("todo"+i.length)}function d(){const e=document.createElement("label");e.setAttribute("for","checklist");const n=document.createElement("input");return n.setAttribute("type","checkbox"),n.setAttribute("name","checklist"),n.setAttribute("id","checklist"),e.appendChild(n),e}},322:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(787);function i(){const e=document.createElement("form");e.classList.add("taskForm");const n=document.createElement("div");n.classList.add("descContainer");const t=document.createElement("div");return t.classList.add("restContainer"),n.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","description"),e.innerHTML="Description";const n=document.createElement("input");return n.setAttribute("type","text"),n.setAttribute("name","description"),n.setAttribute("id","description"),e.appendChild(n),e}()),t.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","dueDate"),e.innerHTML="Due Date";const n=document.createElement("input");return n.setAttribute("type","date"),n.setAttribute("name","dueDate"),n.setAttribute("id","dueDate"),e.appendChild(n),e}()),t.appendChild(function(){const e=document.createElement("select");e.setAttribute("name","priority"),e.setAttribute("id","priority");const n=document.createElement("option");n.setAttribute("value","Urgent"),n.innerHTML="Urgent";const t=document.createElement("option");t.setAttribute("value","Normal"),t.innerHTML="Normal";const r=document.createElement("option");return r.setAttribute("value","Low"),r.innerHTML="Low",e.appendChild(n),e.appendChild(t),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","addTodo");const n=document.createElement("input");return n.setAttribute("type","button"),n.setAttribute("value","Add"),n.setAttribute("name","addTodo"),n.setAttribute("id","addTodo"),n.addEventListener("click",(()=>(0,r.is)())),e.appendChild(n),e}()),e.appendChild(n),e.appendChild(t),e}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),i=t.n(r),a=t(569),o=t.n(a),d=t(565),c=t.n(d),s=t(216),l=t.n(s),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=o().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var C=t(322),g=t(304);document.body.appendChild(function(){const e=document.createElement("div");return e.classList.add("main"),e.appendChild(function(){const e=document.createElement("div");e.classList.add("header");const n=document.createElement("h1");return n.innerHTML="TODO LIST",e.appendChild(n),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("sidebar"),e.appendChild((0,g.Z)()),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("taskcontainer"),e.appendChild((0,C.Z)()),e}()),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,