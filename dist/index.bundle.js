(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([e.id,"html,\nbody {\n    width: 100%;\n    height: 100%;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,WAAW;IACX,YAAY;AAChB;AACA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,SAAS;AACb;;;AAGA;IACI,kBAAkB;IAClB,WAAW;IACX,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,WAAW;IACX,uBAAuB;AAC3B;AACA;IACI,cAAc;IACd,WAAW;IACX,uBAAuB;AAC3B",sourcesContent:["html,\nbody {\n    width: 100%;\n    height: 100%;\n}\n.main {\n    width: 90%;\n    height: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 1fr 4fr;\n    gap: 10px;\n}\n\n\n.header {\n    grid-column: 1 / 3;\n    grid-row: 1;\n    border: 1px solid black;\n}\n.sidebar {\n    grid-column: 1 ;\n    grid-row: 2;\n    border: 1px solid black;\n}\n.taskcontainer {\n    grid-column: 2;\n    grid-row: 2;\n    border: 1px solid black;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);r&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],s=r.base?d[0]+r.base:d[0],u=i[s]||0,l="".concat(s," ").concat(u);i[s]=u+1;var p=n(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=o(m,r);r.byIndex=c,t.splice(c,0,{identifier:l,updater:A,references:1})}a.push(l)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var d=r(e,o),s=0;s<i.length;s++){var u=n(i[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},865:(e,t,n)=>{n.d(t,{Z:()=>r});const r=function(e){return{title:e}}},304:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(865);function o(){const e=document.createElement("form");return e.classList.add("form"),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","title"),e.innerHTML="Title";const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("name","title"),t.setAttribute("id","title"),e.appendChild(t),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","create");const t=document.createElement("input");t.setAttribute("type","button"),t.setAttribute("value","Create New"),t.setAttribute("name","create"),t.setAttribute("id","create"),t.addEventListener("click",(function(e){const t=document.getElementById("title").value;n.push((0,r.Z)(t)),console.log(n);const o=document.createElement("div");o.classList.add("project"+n.length);const i=document.createElement("h1");i.innerHTML=t,o.appendChild(i);const a=document.createElement("button");a.innerHTML="Delete",a.addEventListener("click",(function(){return c.removeChild(o)})),o.appendChild(a);const c=document.getElementsByClassName("sidebar")[0];c.appendChild(o)}));const n=[];return e.appendChild(t),e}()),e}},507:(e,t,n)=>{n.d(t,{Z:()=>r});const r=function(e,t,n){return{description:e,dueDate:t,priority:n}}},322:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(507);function o(){const e=document.createElement("form");return e.classList.add("form"),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","description"),e.innerHTML="Description";const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("name","description"),t.setAttribute("id","description"),e.appendChild(t),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","dueDate"),e.innerHTML="Due Date";const t=document.createElement("input");return t.setAttribute("type","date"),t.setAttribute("name","dueDate"),t.setAttribute("id","dueDate"),e.appendChild(t),e}()),e.appendChild(function(){const e=document.createElement("select");e.setAttribute("name","priority"),e.setAttribute("id","priority");const t=document.createElement("option");t.setAttribute("value","Urgent"),t.innerHTML="Urgent";const n=document.createElement("option");n.setAttribute("value","Normal"),n.innerHTML="Normal";const r=document.createElement("option");return r.setAttribute("value","Low"),r.innerHTML="Low",e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),e.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","addTodo");const t=document.createElement("input");t.setAttribute("type","button"),t.setAttribute("value","Add"),t.setAttribute("name","addTodo"),t.setAttribute("id","addTodo"),t.addEventListener("click",(function(e){const t=document.getElementById("description").value,o=document.getElementById("dueDate").value,i=document.getElementById("priority").value;n.push((0,r.Z)(t,o,i)),console.log(n);const a=document.createElement("div");a.classList.add("todo"+n.length),a.appendChild(function(){const e=document.createElement("label");e.setAttribute("for","checklist");const t=document.createElement("input");return t.setAttribute("type","checkbox"),t.setAttribute("name","checklist"),t.setAttribute("id","checklist"),e.appendChild(t),e}());const c=document.createElement("p");c.innerHTML=t,a.appendChild(c);const d=document.createElement("p");d.innerHTML=o,a.appendChild(d);const s=document.createElement("p");s.innerHTML=i,a.appendChild(s);const u=document.createElement("button");u.innerHTML="Delete",u.addEventListener("click",(function(){return l.removeChild(a)})),a.appendChild(u),console.log("asd");const l=document.getElementsByClassName("taskcontainer")[0];l.appendChild(a)}));const n=[];return e.appendChild(t),e}()),e}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),i=n(569),a=n.n(i),c=n(565),d=n.n(c),s=n(216),u=n.n(s),l=n(589),p=n.n(l),m=n(426),A={};A.styleTagTransform=p(),A.setAttributes=d(),A.insert=a().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=u(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;var f=n(322),h=n(304);document.body.appendChild(function(){const e=document.createElement("div");return e.classList.add("main"),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("header"),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("sidebar"),e.appendChild((0,h.Z)()),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("taskcontainer"),e.appendChild((0,f.Z)()),e}()),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,